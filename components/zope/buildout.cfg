[buildout]

# buildout.sanitycheck makes sure you're not running buildout
# as root.
extensions =
    buildout.sanitycheck

extends =
    ./profiles/base.cfg
    ./profiles/release-5.2.2-pending-versions.cfg
# see http://dist.plone.org/release/<version>/versions.cfg

# If you change your Plone version, you'll also need to update
# the repository link below.
find-links +=
    http://dist.plone.org/release/5.2.2-pending

# This user will own the non-data parts of the installation, and should be used to
# run buildout.
buildout-user = ksuess
# A flag to tell the Unified Installer whether or not to document sudo use.
need-sudo = no

eggs =
    Plone
    Pillow
    kitconcept.volto


############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
zcml =
#    plone.reload


############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
#    src/my.package


############################################
# var Directory
# -------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
#
var-dir=${buildout:directory}/var


############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir={{component.backupsdir}}


############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:{{component.adminpw}}


############################################
# Debug Options
# -------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode;
# this will dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off


############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    zeoserver
    {% for instance in component.zope_instances %}{{instance.script_id}}
    {% endfor %}
    plonesite
    backup
    zopepy
    unifiedinstaller

############################################
# Major Parts
# ----------------------
# These common parts make use of sane base settings from
# base.cfg. To customize a part, just add whatever options
# you need. Read base.cfg for common settings.



[zeoserver]
<= zeoserver_base
recipe = plone.recipe.zeoserver
zeo-address = {{component.zeoaddress}}

# [client1]
# <= client_base
# recipe = plone.recipe.zope2instance
# zeo-address = ${zeoserver:zeo-address}
# http-address = 8080

# [client2]
# <= client_base
# recipe = plone.recipe.zope2instance
# zeo-address = ${zeoserver:zeo-address}
# http-address = 8081

{% for instance in component.zope_instances %}
[{{instance.script_id}}]
<= client_base
recipe = plone.recipe.zope2instance
zeo-address = ${zeoserver:zeo-address}
http-address = {{instance.address.connect}}
# zeo-client-client = ${:_buildout_section_name_}
{% endfor %}


# Create Plone instance with some Volto content
[plonesite]
recipe = collective.recipe.plonesite
site-id = Plone
instance = {{component.zope_instances[0].script_id}}
zeoserver = zeoserver
profiles-initial = Products.CMFPlone:dependencies
profiles =
    plonetheme.barceloneta:default
    plone.app.contenttypes:plone-content
    kitconcept.volto:default
    kitconcept.volto:default-homepage
upgrade-portal = False
upgrade-all-profiles = False
site-replace = True



############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]

buildout.sanitycheck = 1.0.2
collective.recipe.backup = 4.1.0
plone.recipe.unifiedinstaller = 5.2b1
Products.PloneHotfix20200121 = 1.1
# Volto
plone.restapi = >= 5.0.0
Pillow = >= 6.2.1
lxml = >= 4.4.2